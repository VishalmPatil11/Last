// <auto-generated />
using Dot_Net_Mini_Project;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dot_Net_Mini_Project.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220331115840_one")]
    partial class one
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Dot_Net_Mini_Project.Airpod", b =>
                {
                    b.Property<int>("AirpodId")
                        .HasColumnType("int");

                    b.Property<string>("AirpodName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("AirpodId");

                    b.ToTable("airpods");
                });

            modelBuilder.Entity("Dot_Net_Mini_Project.Ipad", b =>
                {
                    b.Property<int>("IpadId")
                        .HasColumnType("int");

                    b.Property<string>("IpadName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IpadId");

                    b.ToTable("ipads");
                });

            modelBuilder.Entity("Dot_Net_Mini_Project.Iphone", b =>
                {
                    b.Property<int>("IphoneId")
                        .HasColumnType("int");

                    b.Property<string>("IphoneName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IphoneId");

                    b.ToTable("iphones");
                });

            modelBuilder.Entity("Dot_Net_Mini_Project.Iwatch", b =>
                {
                    b.Property<int>("IwatchId")
                        .HasColumnType("int");

                    b.Property<string>("IwatchName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IwatchId");

                    b.ToTable("iwatches");
                });

            modelBuilder.Entity("Dot_Net_Mini_Project.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Dot_Net_Mini_Project.Airpod", b =>
                {
                    b.HasOne("Dot_Net_Mini_Project.User", "user")
                        .WithOne("airpod")
                        .HasForeignKey("Dot_Net_Mini_Project.Airpod", "AirpodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Dot_Net_Mini_Project.Ipad", b =>
                {
                    b.HasOne("Dot_Net_Mini_Project.User", "user")
                        .WithOne("ipad")
                        .HasForeignKey("Dot_Net_Mini_Project.Ipad", "IpadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Dot_Net_Mini_Project.Iphone", b =>
                {
                    b.HasOne("Dot_Net_Mini_Project.User", "user")
                        .WithOne("Iphone")
                        .HasForeignKey("Dot_Net_Mini_Project.Iphone", "IphoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Dot_Net_Mini_Project.Iwatch", b =>
                {
                    b.HasOne("Dot_Net_Mini_Project.User", "user")
                        .WithOne("iwatch")
                        .HasForeignKey("Dot_Net_Mini_Project.Iwatch", "IwatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Dot_Net_Mini_Project.User", b =>
                {
                    b.Navigation("airpod");

                    b.Navigation("ipad");

                    b.Navigation("Iphone");

                    b.Navigation("iwatch");
                });
#pragma warning restore 612, 618
        }
    }
}
